{"version":3,"sources":["components/Notification.jsx","components/ContactsList.jsx","redux/contacts/contactsSelectors.jsx","components/ContactsFilter.jsx","components/ContactsBar.jsx","components/StyledFormInput.jsx","components/ContactForm.jsx","components/ContactNotification.jsx","components/ContactModal.jsx","utils/getDublicateContacts.jsx","components/NoContactsView.jsx","pages/ContactsPage.jsx"],"names":["Notification","message","styles","sx","padding","ContactsItem","styled","Grid","theme","typography","body2","direction","justifyContent","alignItems","spacing","color","palette","text","secondary","backgroundColor","primary","main","borderRadius","marginBottom","boxShadow","shadows","transitionProperty","transitionDuration","transitionTimingFunction","transform","ContactsWrap","display","flexWrap","flexGrow","flexDirection","ContactsList","contacts","openAddContactModal","setCurrentContactId","dispatch","useDispatch","container","component","className","maxWidth","ml","mr","map","id","name","number","item","Typography","background","default","href","IconButton","onClick","onEditContactBtnClick","deleteContact","onDeleteContactBtnClick","getContacts","state","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilterValue","toLowerCase","trim","contact","includes","SearchContactByName","position","shape","alpha","common","white","marginLeft","width","breakpoints","up","SearchIconWrapper","height","pointerEvents","SearchContactInput","InputBase","paddingLeft","transition","transitions","create","ContactsFilter","showAddContactBtn","isBeforeMediumScreen","useMediaQuery","down","contactsFilterValue","useSelector","searchContactInputIsFilled","placeholder","inputProps","value","onChange","e","changeFilter","target","onFocus","onBlur","AddContactBtn","Fab","zIndex","top","left","right","margin","opacity","ContactsBar","useState","isShowAddContactBtn","setIsShowAddContactBtn","AppBar","bottom","Toolbar","StyledFormInput","TextField","borderColor","light","ContactForm","onSubmit","currentContactId","isContactSaved","setIsContactSaved","useForm","handleSubmit","control","setValue","currentContact","find","getCurrentContactById","onAddContactInputChange","reset","Box","data","defaultValue","render","field","error","fieldState","autoFocus","variant","fullWidth","label","onInput","helperText","rules","pattern","required","type","Button","disabled","contrastText","marginTop","Zoom","in","ContactNotification","isDuplicateContact","duplicateValue","duplicateIndex","AddContactModalCommonStyles","ContactModal","isOpen","onClose","setIsDuplicateContact","onAddContactModalClose","isNewContact","Dialog","open","DialogTitle","DialogContent","duplicateContact","duplicateContactAllIdx","findIndex","duplicateContactByNameIdx","duplicateContactByNumberIdx","getDuplicateContact","editContact","addContact","NoContactsView","textAlign","align","ContactsPage","isOpenAddContactModal","setIsOpenAddContactModal","contactsAll","useEffect","paddingTop","Container","length"],"mappings":"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","file":"static/js/contacts-page.7e14fae1.chunk.js","sourcesContent":["import { Typography } from \"@mui/material\";\n\nexport default function Notification({ message, ...styles }) {\n  return <Typography sx={{ padding: \"5px\", ...styles }}>{message}</Typography>;\n}\n","import { useDispatch } from \"react-redux\";\nimport { styled } from \"@mui/material/styles\";\nimport { Grid, Typography, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\n\nimport { theme } from \"../common/theme\";\nimport { deleteContact } from \"../redux/contacts/contactsOperations\";\n\nconst ContactsItem = styled(Grid)(({ theme }) => ({\n  ...theme.typography.body2,\n  direction: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: theme.spacing(0.5),\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.primary.main,\n  borderRadius: \"5px\",\n  marginBottom: theme.spacing(1),\n  boxShadow: theme.shadows[1],\n\n  transitionProperty: \"transform\",\n  transitionDuration: \"300ms\",\n  transitionTimingFunction: \"ease-out\",\n  \"&:hover, &:focus\": {\n    boxShadow: theme.shadows[3],\n    transform: \"scale(1.02)\",\n  },\n}));\n\nconst ContactsWrap = styled(\"div\")({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexGrow: 1,\n  flexDirection: \"row\",\n  alignItems: \"center\",\n});\n\nexport default function ContactsList({\n  contacts,\n  openAddContactModal,\n  setCurrentContactId,\n}) {\n  const dispatch = useDispatch();\n\n  const onDeleteContactBtnClick = (id) => dispatch(deleteContact(id));\n  const onEditContactBtnClick = (id) => {\n    openAddContactModal(true);\n    setCurrentContactId(id);\n  };\n\n  return (\n    <Grid\n      container\n      component=\"ul\"\n      className=\"list\"\n      sx={{ maxWidth: \"600px\", ml: \"auto\", mr: \"auto\" }}\n    >\n      {contacts?.map(({ id, name, number }) => (\n        <ContactsItem key={id} container item component=\"li\">\n          <ContactsWrap sx={{ justifyContent: \"space-between\" }}>\n            <ContactsWrap sx={{ justifyContent: \"space-evenly\" }}>\n              <Typography component=\"span\" sx={{ mr: \"1%\" }}>\n                {name}\n              </Typography>\n              <Typography\n                component=\"a\"\n                sx={{\n                  mr: \"1%\",\n                  \"&:hover, &:focus\": {\n                    color: theme.palette.background.default,\n                  },\n                }}\n                href={`tel:${number}`}\n                className=\"link\"\n              >\n                {number}\n              </Typography>\n            </ContactsWrap>\n            <ContactsWrap sx={{ justifyContent: \"space-evenly\" }}>\n              <IconButton\n                aria-label=\"edit contact\"\n                onClick={() => onEditContactBtnClick(id)}\n                sx={{\n                  mr: \"1%\",\n                  \"&:hover, &:focus\": {\n                    color: theme.palette.background.default,\n                  },\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete contact\"\n                onClick={() => onDeleteContactBtnClick(id)}\n                sx={{\n                  mr: \"1%\",\n                  \"&:hover, &:focus\": {\n                    color: theme.palette.background.default,\n                  },\n                }}\n              >\n                <DeleteForeverIcon />\n              </IconButton>\n            </ContactsWrap>\n          </ContactsWrap>\n        </ContactsItem>\n      ))}\n    </Grid>\n  );\n}\n","import { createSelector } from \"reselect\";\n\nconst getContacts = (state) => state.contacts.items;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst getError = (state) => state.contacts.error;\n\nconst getFilteredContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilterValue = filter.toLowerCase().trim();\n        \n        return contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizedFilterValue)\n        );\n    }\n);\n\nexport { getContacts, getFilter, getError, getFilteredContacts }; ","import { useDispatch, useSelector } from \"react-redux\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { IconButton, InputBase } from \"@mui/material\";\n \nimport { theme } from '../common/theme'\nimport { getFilter } from \"../redux/contacts/contactsSelectors\";\nimport { changeFilter } from \"../redux/contacts/ContactsActions\";\n\n\nconst SearchContactByName = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst SearchContactInput = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"25ch\",\n      },\n    },\n  },\n}));\n\nexport default function ContactsFilter({ showAddContactBtn }) {\n    const isBeforeMediumScreen = useMediaQuery(theme.breakpoints.down('md'));\n    const contactsFilterValue = useSelector(getFilter);\n    const searchContactInputIsFilled = contactsFilterValue !== '';\n    const dispatch = useDispatch();\n\n    const onSearchContactFocus = () => {\n      if (!isBeforeMediumScreen) return;\n\n      showAddContactBtn(false);\n    };\n\n    const onSearchContactBlur = (e) => {\n        if (!isBeforeMediumScreen || e.target.value.trim() !== '') return;\n\n        showAddContactBtn(true);\n        if (e.target.value.trim() === '') e.target.value = '';\n    };\n\n    const onFilterChange = (e) => {\n        dispatch(changeFilter(e.target.value.trim()));\n    };\n\n    const onClearBtnClick = () => {\n        dispatch(changeFilter(''));\n        showAddContactBtn(true);\n    };\n      return (\n        <SearchContactByName>\n          <SearchIconWrapper>\n            <SearchIcon />\n          </SearchIconWrapper>\n          <SearchContactInput\n            placeholder=\"Search contact\"\n            inputProps={{ \"aria-label\": \"Search contact by name\" }}\n            value={contactsFilterValue}\n            onChange={onFilterChange}\n            onFocus={onSearchContactFocus}\n            onBlur={onSearchContactBlur}\n          />\n          {searchContactInputIsFilled && (\n            <IconButton aria-label=\"clear\" onClick={onClearBtnClick}>\n              <ClearIcon />\n            </IconButton>\n          )}\n        </SearchContactByName>\n      );\n}","import { useState } from 'react';\n\nimport { styled } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport ContactsFilter from './ContactsFilter';\n\nconst AddContactBtn = styled(Fab)({\n  position: \"absolute\",\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: \"0 auto\",\n  opacity: \"0.8\",\n});\n\nexport default function ContactsBar({ openAddContactModal }) {\n    const [isShowAddContactBtn, setIsShowAddContactBtn] = useState(true);\n\n    const addContactBtnClick = () => {\n        openAddContactModal(true);\n    };\n\n    return (\n      <>\n        <AppBar\n          component=\"div\"\n          position=\"fixed\"\n          color=\"primary\"\n          sx={{ top: \"auto\", bottom: 0 }}\n        >\n          <Toolbar sx={{ justifyContent: \"flex-end\" }}>\n            {isShowAddContactBtn && (\n              <AddContactBtn\n                color=\"secondary\"\n                aria-label=\"add contact\"\n                onClick={addContactBtnClick}\n              >\n                <AddIcon />\n              </AddContactBtn>\n            )}\n            <ContactsFilter showAddContactBtn={setIsShowAddContactBtn} />\n          </Toolbar>\n        </AppBar>\n      </>\n    );\n}","import { TextField } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const StyledFormInput = styled(TextField)(({ theme }) => ({\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderColor: theme.palette.background.light,\n    },\n    \"&:hover fieldset\": {\n      borderColor: theme.palette.primary.main,\n    },\n    \"&.Mui-focused fieldset\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n","import { useSelector } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Box, Button, Zoom } from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\n\nimport { getFilteredContacts } from \"../redux/contacts/contactsSelectors\";\nimport { theme } from \"../common/theme\";\nimport { StyledFormInput } from \"./StyledFormInput\";\n\nexport default function ContactForm({\n  onSubmit,\n  currentContactId,\n  isContactSaved,\n  setIsContactSaved,\n}) {\n  const { handleSubmit, control, setValue } = useForm();\n\n  const contacts = useSelector(getFilteredContacts);\n  const getCurrentContactById = (contacts) => {\n    return contacts.find((contact) => contact.id === currentContactId);\n  };\n  const currentContact = getCurrentContactById(contacts);\n\n  const onAddContactInputChange = (e) => {\n    setValue(e.target.name, e.target.value);\n    setIsContactSaved(false);\n  };\n\n  const onSubmitContactData = (data) => {\n    onSubmit(data);\n    reset();\n  };\n\n  const reset = () => {\n    setValue(\"name\", \"\");\n    setValue(\"number\", \"\");\n  };\n\n  const inputNameErrMessage =\n    \"The name can only consist of letters, apostrophes, dashes and spaces, it must not start or end with a space. For example, Adrian, Jacob Mercer, Charles de Buz de Castelmore d'Artagnan, etc.\";\n  const inputNameValidationPattern =\n    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я ]*)*$/;\n  const inputNumberErrMessage =\n    \"The phone number must be at least 5 digits long and can contain spaces, hyphens, parentheses and can start with +, must not start or end with a space.\";\n  const inputNumberValidationPattern =\n    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmitContactData)}\n      sx={{ display: \"flex\", justifyContent: \"flex-end\", flexWrap: \"wrap\" }}\n    >\n      <Controller\n        name=\"name\"\n        control={control}\n        defaultValue={currentContact ? currentContact.name : \"\"}\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <StyledFormInput\n            autoFocus\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            name=\"name\"\n            label=\"Name\"\n            value={value}\n            onInput={onChange}\n            onChange={onAddContactInputChange}\n            error={!!error}\n            helperText={error ? error.message || inputNameErrMessage : null}\n          />\n        )}\n        rules={{\n          pattern: inputNameValidationPattern,\n          required: \"Enter name\",\n        }}\n      />\n      <Controller\n        name=\"number\"\n        control={control}\n        defaultValue={currentContact ? currentContact.number : \"\"}\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <StyledFormInput\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            name=\"number\"\n            label=\"Number\"\n            value={value}\n            onInput={onChange}\n            onChange={onAddContactInputChange}\n            error={!!error}\n            helperText={error ? error.message || inputNumberErrMessage : null}\n            type=\"tel\"\n          />\n        )}\n        rules={{\n          pattern: inputNumberValidationPattern,\n          required: \"Enter number\",\n        }}\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        aria-label=\"save\"\n        disabled={isContactSaved}\n        sx={{\n          \"&:hover, &:focus\": {\n            color: theme.palette.primary.contrastText,\n            backgroundColor: theme.palette.primary.main,\n          },\n          marginTop: \"5px\",\n          \"&.Mui-disabled\": {\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.primary.main,\n          },\n        }}\n      >\n        {isContactSaved ? (\n          <Zoom in={isContactSaved}>{<CheckIcon />}</Zoom>\n        ) : (\n          \"Save\"\n        )}\n      </Button>\n    </Box>\n  );\n}\n","import Notification from './Notification';\n\nexport default function ContactNotification({\n    currentContactId,\n    isDuplicateContact,\n    contacts,\n}) {\n    return (\n      !currentContactId && (\n        <>\n          {isDuplicateContact?.duplicateValue === \"all\" && (\n            <Notification\n              message={`${\n                contacts[isDuplicateContact.duplicateIndex].name\n              } with number ${\n                contacts[isDuplicateContact.duplicateIndex].number\n              } is already in contacts!`}\n            />\n          )}\n          {isDuplicateContact?.duplicateValue === \"name\" && (\n            <Notification\n              message={`${\n                contacts[isDuplicateContact.duplicateIndex].name\n              } is already in contacts!`}\n            />\n          )}\n          {isDuplicateContact?.duplicateValue === \"number\" && (\n            <Notification\n              message={`${\n                contacts[isDuplicateContact.duplicateIndex].number\n              } is already in contacts! (${\n                contacts[isDuplicateContact.duplicateIndex].name\n              } has this number)`}\n            />\n          )}\n        </>\n      )\n    );\n}","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dialog, IconButton, DialogContent, DialogTitle } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport { addContact, editContact } from \"../redux/contacts/contactsOperations\";\nimport { getContacts } from \"../redux/contacts/contactsSelectors\";\nimport { getDuplicateContact } from \"../utils/getDublicateContacts\";\nimport { theme } from \"../common/theme\";\nimport ContactForm from \"./ContactForm\";\nimport ContactNotifications from \"./ContactNotification\";\n\nconst AddContactModalCommonStyles = {\n  backgroundColor: theme.palette.background.default,\n};\nexport default function ContactModal({\n  isOpen,\n  onClose,\n  currentContactId,\n  setCurrentContactId,\n}) {\n  const [isDuplicateContact, setIsDuplicateContact] = useState(null);\n  const [isContactSaved, setIsContactSaved] = useState(false);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onAddContactModalClose = () => {\n    onClose(false);\n    setIsDuplicateContact(null);\n    setCurrentContactId(null);\n    setIsContactSaved(false);\n  };\n\n  const isNewContact = !currentContactId;\n\n  const onFormSubmit = (data) => {\n    const duplicateContact = getDuplicateContact(\n      contacts,\n      data.name,\n      data.number\n    );\n    setIsDuplicateContact(duplicateContact);\n\n    if (!isNewContact) {\n      dispatch(\n        editContact({\n          id: currentContactId,\n          ...data,\n        })\n      );\n      onAddContactModalClose()\n      return;\n    }\n\n    if (!duplicateContact) {\n      dispatch(addContact(data));\n      setIsContactSaved(true);\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={isOpen} onClose={onAddContactModalClose} fullWidth>\n        <IconButton\n          aria-label=\"close\"\n          onClick={onAddContactModalClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.primary.main,\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogTitle\n          id=\"add-edit-contact-form-title\"\n          sx={{\n            ...AddContactModalCommonStyles,\n            color: theme.palette.primary.main,\n          }}\n        >\n          {isNewContact ? \"Adding contact\" : \"Editing contact\"}\n        </DialogTitle>\n        <DialogContent\n          sx={{\n            ...AddContactModalCommonStyles,\n          }}\n        >\n          <ContactForm\n            onSubmit={onFormSubmit}\n            currentContactId={currentContactId}\n            isContactSaved={isContactSaved}\n            setIsContactSaved={setIsContactSaved}\n            isNewContact={isNewContact}\n          />\n          <ContactNotifications\n            currentContactId={currentContactId}\n            isDuplicateContact={isDuplicateContact}\n            contacts={contacts}\n          />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","export const getDuplicateContact = (contacts, name, number) => {\n  const duplicateContactAllIdx = contacts.findIndex(\n    (contact) => contact.name === name && contact.number === number\n  );\n  const duplicateContactByNameIdx = contacts.findIndex(\n    (contact) => contact.name === name\n  );\n  const duplicateContactByNumberIdx = contacts.findIndex(\n    (contact) => contact.number === number\n  );\n\n  if (duplicateContactAllIdx !== -1) {\n    return {\n      duplicateValue: \"all\",\n      duplicateIndex: duplicateContactAllIdx,\n    };\n  }\n  if (duplicateContactByNameIdx !== -1) {\n    return {\n      duplicateValue: \"name\",\n      duplicateIndex: duplicateContactByNameIdx,\n    };\n  }\n  if (duplicateContactByNumberIdx !== -1) {\n    return {\n      duplicateValue: \"number\",\n      duplicateIndex: duplicateContactByNumberIdx,\n    };\n  }\n\n  return null;\n};\n","import { Box, Typography } from \"@mui/material\";\n\n\nexport default function NoContactsView() {\n  return (\n    <Box sx={{ ml: \"auto\", mr: \"auto\", textAlign: \"center\" }}>\n      <Typography component=\"p\" variant=\"h6\" align=\"center\">\n        You have no contacts yet ...\n      </Typography>\n\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Box } from \"@mui/material\";\n\nimport ContactsList from \"../components/ContactsList\";\nimport ContactsBar from \"../components/ContactsBar\";\nimport AddContactModal from \"../components/ContactModal\";\nimport { getContacts } from \"../redux/contacts/contactsOperations\";\nimport NoContactsView from \"../components/NoContactsView\";\nimport { getFilteredContacts } from \"../redux/contacts/contactsSelectors\";\n\nexport default function ContactsPage() {\n  const [isOpenAddContactModal, setIsOpenAddContactModal] = useState(false);\n  const [currentContactId, setCurrentContactId] = useState(null);\n  const contacts = useSelector(getFilteredContacts);\n  const contactsAll = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Box component=\"section\" sx={{ flexGrow: 1, paddingTop: \"80px\" }}>\n      <Container>\n        <h1 className=\"visuallyHidden\">Contacts</h1>\n        {contactsAll?.length > 0 && contacts?.length > 0 ? (\n          <ContactsList\n            contacts={contacts}\n            openAddContactModal={setIsOpenAddContactModal}\n            setCurrentContactId={setCurrentContactId}\n          />\n        ) : (\n          <NoContactsView\n            message={\n              contactsAll?.length === 0 && contacts?.length === 0\n                ? \"You have no contacts...\"\n                : \"No results were found for this request\"\n            }\n          />\n        )}\n        <ContactsBar openAddContactModal={setIsOpenAddContactModal} />\n        <AddContactModal\n          isOpen={isOpenAddContactModal}\n          onClose={setIsOpenAddContactModal}\n          currentContactId={currentContactId}\n          setCurrentContactId={setCurrentContactId}\n        />\n      </Container>\n    </Box>\n  );\n}\n"],"sourceRoot":""}